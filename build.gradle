plugins {
    id "java"
    id "eclipse"
    id "edu.sc.seis.launch4j" version "2.4.9"
}

// Settings
sourceCompatibility = 1.7
targetCompatibility = 1.7

// In this section you declare where to find the dependencies of your project
repositories {
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

task fatJar(type: Jar) {
    manifest {
      // version can be changed via 'gradle.properties' file
      attributes 'Implementation-Version': archiveVersion, 'Main-Class': 'de.onyxbits.raccoon.Main'
    }
    archiveBaseName = project.name
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    exclude 'META-INF/*', 'META-INF/maven/'
    with jar
}

createExe {
  copyConfigurable = project.tasks.fatJar.outputs.files
  outfile = 'Raccoon-' +version +'.exe'
  mainClassName = 'de.onyxbits.raccoon.Main'
  jvmOptions = [ "-Dswing.defaultlaf=com.sun.java.swing.plaf.windows.WindowsLookAndFeel", "-Djava.net.preferIPv4Stack=true" ]
  jar = "lib/${project.tasks.fatJar.archiveName}"
  icon= '../../icon.ico'
  jreMinVersion ='1.7.0'
  bundledJrePath = '%JAVA_HOME%'
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    // compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'net.dongliu:apk-parser:2.6.10'
    compile 'org.hsqldb:hsqldb:2.5.1'
    compile 'org.eclipse.jetty:jetty-server:8.1.22.v20160922'
    compile 'com.google.zxing:core:3.4.1'
    compile 'commons-codec:commons-codec:1.15'
    compile 'com.google.protobuf:protobuf-java:3.14.0'
    compile 'org.apache.httpcomponents:httpclient:4.5.13'
    compile 'org.apache.httpcomponents:httpcore:4.4.14'
    compile 'commons-io:commons-io:2.8.0'
    compile 'commons-cli:commons-cli:1.4'
    compile group: 'org.bouncycastle', name: 'bctls-jdk15on', version: '1.57'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile "junit:junit:4.13.1"
}

wrapper {
    gradleVersion = "6.8.2"
    distributionType = Wrapper.DistributionType.ALL
}